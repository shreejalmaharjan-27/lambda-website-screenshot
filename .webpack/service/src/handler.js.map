{"version":3,"sources":["webpack://screenshot-service/./src/puppeteer.util.ts","webpack://screenshot-service/external \"chrome-aws-lambda\"","webpack://screenshot-service/external \"puppeteer\"","webpack://screenshot-service/external \"puppeteer-core\"","webpack://screenshot-service/webpack/bootstrap","webpack://screenshot-service/webpack/runtime/compat get default export","webpack://screenshot-service/webpack/runtime/define property getters","webpack://screenshot-service/webpack/runtime/hasOwnProperty shorthand","webpack://screenshot-service/webpack/runtime/make namespace object","webpack://screenshot-service/./src/handler.ts"],"names":["puppeteerLocal","require","e","console","log","getPuppeteer","puppeteerCore","event","puppeteer","params","queryStringParameters","url","width","height","userAgent","startsWith","statusCode","body","JSON","stringify","message","error","browser","launch","args","chromium","defaultViewport","executablePath","headless","page","newPage","setUserAgent","setViewport","Number","goto","imageBuffer","screenshot","toString","isBase64Encoded","headers"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA,IAAIA,cAAJ;;AAEA,IAAI;AACF;AACAA,gBAAc,GAAGC,mBAAO,CAAC,4BAAD,CAAxB;AACD,CAHD,CAGE,OAAOC,CAAP,EAAU;AACV;AACAC,SAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,C,CAED;;;AACO,MAAMC,YAAY,GAAG,MAAML,cAAc,IAAIM,uDAA7C,C;;;;;;;;;;ACbP,+C;;;;;;;;;;ACAA,uC;;;;;;;;;;ACAA,4C;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;CCJA;;AACA;AAEA,iEAAe,MAAOC,KAAP,IAAsB;AACnC,QAAMC,SAAS,GAAGH,6DAAY,EAA9B;;AACA,MAAI;AACF,UAAMI,MAAM,GAAGF,KAAK,CAACG,qBAAN,IAA+B,EAA9C;AACA,UAAM;AAAEC,SAAG,GAAG,EAAR;AAAYC,WAAK,GAAG,IAApB;AAA0BC,YAAM,GAAG,GAAnC;AAAwCC,eAAS,GAAG;AAApD,QAAoLL,MAA1L;;AAEA,QAAI,CAACE,GAAD,IAAQ,CAACA,GAAG,CAACI,UAAJ,CAAe,MAAf,CAAb,EAAqC;AACnC,aAAO;AACLC,kBAAU,EAAE,GADP;AAELC,YAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,iBAAO,EAAE,6BAAX;AAAyCC,eAAK,EAAC;AAA/C,SAAf;AAFD,OAAP;AAID;;AAED,UAAMC,OAAO,GAAG,MAAMd,SAAS,CAACe,MAAV,CAAiB;AACrCC,UAAI,EAAEC,+DAD+B;AAErCC,qBAAe,EAAED,0EAFoB;AAGrCE,oBAAc,EAAE,MAAMF,yEAHe;AAIrCG,cAAQ,EAAE;AAJ2B,KAAjB,CAAtB;AAOA,UAAMC,IAAI,GAAG,MAAMP,OAAO,CAACQ,OAAR,EAAnB;AACAD,QAAI,CAACE,YAAL,CAAkBjB,SAAlB;AACAe,QAAI,CAACG,WAAL,CAAiB;AAAEpB,WAAK,EAAEqB,MAAM,CAACrB,KAAD,CAAf;AAAwBC,YAAM,EAAEoB,MAAM,CAACpB,MAAD;AAAtC,KAAjB;AACA,UAAMgB,IAAI,CAACK,IAAL,CAAUvB,GAAV,CAAN;AACA,UAAMwB,WAAW,GAAG,MAAMN,IAAI,CAACO,UAAL,EAA1B;AAEA,WAAO;AACLpB,gBAAU,EAAE,GADP;AAELC,UAAI,EAAEkB,WAAW,CAACE,QAAZ,CAAqB,QAArB,CAFD;AAGLC,qBAAe,EAAE,IAHZ;AAILC,aAAO,EAAE;AAAE,wBAAgB;AAAlB;AAJJ,KAAP;AAMD,GA9BD,CA8BE,OAAOrC,CAAP,EAAU;AACV,WAAO;AACLc,gBAAU,EAAE,GADP;AAELC,UAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,eAAO,EAAE,uCADU;AAC8BC,aAAK,EAAC;AADpC,OAAf;AAFD,KAAP;AAMD;AACF,CAxCD,E","file":"src/handler.js","sourcesContent":["import puppeteerCore from 'puppeteer-core'\n\nlet puppeteerLocal: any\n\ntry {\n  // eslint-disable-next-line global-require,import/no-extraneous-dependencies\n  puppeteerLocal = require('puppeteer')\n} catch (e) {\n  // eslint-disable-next-line no-console\n  console.log('local puppeteer is missing')\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getPuppeteer = () => puppeteerLocal || puppeteerCore\n","module.exports = require(\"chrome-aws-lambda\");;","module.exports = require(\"puppeteer\");;","module.exports = require(\"puppeteer-core\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import chromium from 'chrome-aws-lambda'\n\n// eslint-disable-next-line import/extensions\nimport { getPuppeteer } from './puppeteer.util'\n\nexport default async (event: any) => {\n  const puppeteer = getPuppeteer()\n  try {\n    const params = event.queryStringParameters || {}\n    const { url = '', width = 1500, height = 900, userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.3.5029.61 Safari/537.36' } = params\n\n    if (!url || !url.startsWith('http')) {\n      return {\n        statusCode: 400,\n        body: JSON.stringify({ message: 'you should specify page URL',error:true }),\n      }\n    }\n\n    const browser = await puppeteer.launch({\n      args: chromium.args,\n      defaultViewport: chromium.defaultViewport,\n      executablePath: await chromium.executablePath,\n      headless: true,\n    })\n\n    const page = await browser.newPage()\n    page.setUserAgent(userAgent);\n    page.setViewport({ width: Number(width), height: Number(height) })\n    await page.goto(url)\n    const imageBuffer = await page.screenshot()\n\n    return {\n      statusCode: 200,\n      body: imageBuffer.toString('base64'),\n      isBase64Encoded: true,\n      headers: { 'Content-Type': 'image/png' },\n    }\n  } catch (e) {\n    return {\n      statusCode: 500,\n      body: JSON.stringify({\n        message: 'Something going wrong on backend side',error:true\n      }),\n    }\n  }\n}\n"],"sourceRoot":""}